// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class MemberApproved extends ethereum.Event {
  get params(): MemberApproved__Params {
    return new MemberApproved__Params(this);
  }
}

export class MemberApproved__Params {
  _event: MemberApproved;

  constructor(event: MemberApproved) {
    this._event = event;
  }

  get member(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MemberRegistered extends ethereum.Event {
  get params(): MemberRegistered__Params {
    return new MemberRegistered__Params(this);
  }
}

export class MemberRegistered__Params {
  _event: MemberRegistered;

  constructor(event: MemberRegistered) {
    this._event = event;
  }

  get _newMember(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _memberURI(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProposalCanceled extends ethereum.Event {
  get params(): ProposalCanceled__Params {
    return new ProposalCanceled__Params(this);
  }
}

export class ProposalCanceled__Params {
  _event: ProposalCanceled;

  constructor(event: ProposalCanceled) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ProposalCreated extends ethereum.Event {
  get params(): ProposalCreated__Params {
    return new ProposalCreated__Params(this);
  }
}

export class ProposalCreated__Params {
  _event: ProposalCreated;

  constructor(event: ProposalCreated) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposalType(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get data(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class ProposalExecuted extends ethereum.Event {
  get params(): ProposalExecuted__Params {
    return new ProposalExecuted__Params(this);
  }
}

export class ProposalExecuted__Params {
  _event: ProposalExecuted;

  constructor(event: ProposalExecuted) {
    this._event = event;
  }

  get proposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Contract__getOngoingProposalsResultValue0Struct extends ethereum.Tuple {
  get executed(): boolean {
    return this[0].toBoolean();
  }

  get canceled(): boolean {
    return this[1].toBoolean();
  }

  get proposer(): Address {
    return this[2].toAddress();
  }

  get data(): Bytes {
    return this[3].toBytes();
  }

  get target(): Address {
    return this[4].toAddress();
  }

  get voteStart(): BigInt {
    return this[5].toBigInt();
  }

  get voteDuration(): BigInt {
    return this[6].toBigInt();
  }

  get yesvotes(): BigInt {
    return this[7].toBigInt();
  }

  get novotes(): BigInt {
    return this[8].toBigInt();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  UPGRADE_INTERFACE_VERSION(): string {
    let result = super.call(
      "UPGRADE_INTERFACE_VERSION",
      "UPGRADE_INTERFACE_VERSION():(string)",
      [],
    );

    return result[0].toString();
  }

  try_UPGRADE_INTERFACE_VERSION(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "UPGRADE_INTERFACE_VERSION",
      "UPGRADE_INTERFACE_VERSION():(string)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  checkIsMemberApproved(_member: Address): boolean {
    let result = super.call(
      "checkIsMemberApproved",
      "checkIsMemberApproved(address):(bool)",
      [ethereum.Value.fromAddress(_member)],
    );

    return result[0].toBoolean();
  }

  try_checkIsMemberApproved(_member: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkIsMemberApproved",
      "checkIsMemberApproved(address):(bool)",
      [ethereum.Value.fromAddress(_member)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  daoURI(): string {
    let result = super.call("daoURI", "daoURI():(string)", []);

    return result[0].toString();
  }

  try_daoURI(): ethereum.CallResult<string> {
    let result = super.tryCall("daoURI", "daoURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getOngoingProposals(): Array<Contract__getOngoingProposalsResultValue0Struct> {
    let result = super.call(
      "getOngoingProposals",
      "getOngoingProposals():((bool,bool,address,bytes,address,uint48,uint48,uint256,uint256)[])",
      [],
    );

    return result[0].toTupleArray<Contract__getOngoingProposalsResultValue0Struct>();
  }

  try_getOngoingProposals(): ethereum.CallResult<
    Array<Contract__getOngoingProposalsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getOngoingProposals",
      "getOngoingProposals():((bool,bool,address,bytes,address,uint48,uint48,uint256,uint256)[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Contract__getOngoingProposalsResultValue0Struct>(),
    );
  }

  getOngoingProposalsCount(): BigInt {
    let result = super.call(
      "getOngoingProposalsCount",
      "getOngoingProposalsCount():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getOngoingProposalsCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getOngoingProposalsCount",
      "getOngoingProposalsCount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proposalThreshold(): BigInt {
    let result = super.call(
      "proposalThreshold",
      "proposalThreshold():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_proposalThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposalThreshold",
      "proposalThreshold():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  votingDelay(): BigInt {
    let result = super.call("votingDelay", "votingDelay():(uint256)", []);

    return result[0].toBigInt();
  }

  try_votingDelay(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("votingDelay", "votingDelay():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  votingPeriod(): BigInt {
    let result = super.call("votingPeriod", "votingPeriod():(uint256)", []);

    return result[0].toBigInt();
  }

  try_votingPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("votingPeriod", "votingPeriod():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class CancelProposalCall extends ethereum.Call {
  get inputs(): CancelProposalCall__Inputs {
    return new CancelProposalCall__Inputs(this);
  }

  get outputs(): CancelProposalCall__Outputs {
    return new CancelProposalCall__Outputs(this);
  }
}

export class CancelProposalCall__Inputs {
  _call: CancelProposalCall;

  constructor(call: CancelProposalCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelProposalCall__Outputs {
  _call: CancelProposalCall;

  constructor(call: CancelProposalCall) {
    this._call = call;
  }
}

export class CastVoteCall extends ethereum.Call {
  get inputs(): CastVoteCall__Inputs {
    return new CastVoteCall__Inputs(this);
  }

  get outputs(): CastVoteCall__Outputs {
    return new CastVoteCall__Outputs(this);
  }
}

export class CastVoteCall__Inputs {
  _call: CastVoteCall;

  constructor(call: CastVoteCall) {
    this._call = call;
  }

  get _proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _isYesVote(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class CastVoteCall__Outputs {
  _call: CastVoteCall;

  constructor(call: CastVoteCall) {
    this._call = call;
  }
}

export class ExecuteProposalCall extends ethereum.Call {
  get inputs(): ExecuteProposalCall__Inputs {
    return new ExecuteProposalCall__Inputs(this);
  }

  get outputs(): ExecuteProposalCall__Outputs {
    return new ExecuteProposalCall__Outputs(this);
  }
}

export class ExecuteProposalCall__Inputs {
  _call: ExecuteProposalCall;

  constructor(call: ExecuteProposalCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExecuteProposalCall__Outputs {
  _call: ExecuteProposalCall;

  constructor(call: ExecuteProposalCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _daoURI(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _ownerURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class NewMemberApprovalProposalCall extends ethereum.Call {
  get inputs(): NewMemberApprovalProposalCall__Inputs {
    return new NewMemberApprovalProposalCall__Inputs(this);
  }

  get outputs(): NewMemberApprovalProposalCall__Outputs {
    return new NewMemberApprovalProposalCall__Outputs(this);
  }
}

export class NewMemberApprovalProposalCall__Inputs {
  _call: NewMemberApprovalProposalCall;

  constructor(call: NewMemberApprovalProposalCall) {
    this._call = call;
  }

  get _newMember(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class NewMemberApprovalProposalCall__Outputs {
  _call: NewMemberApprovalProposalCall;

  constructor(call: NewMemberApprovalProposalCall) {
    this._call = call;
  }
}

export class NewProposalCall extends ethereum.Call {
  get inputs(): NewProposalCall__Inputs {
    return new NewProposalCall__Inputs(this);
  }

  get outputs(): NewProposalCall__Outputs {
    return new NewProposalCall__Outputs(this);
  }
}

export class NewProposalCall__Inputs {
  _call: NewProposalCall;

  constructor(call: NewProposalCall) {
    this._call = call;
  }

  get _calldata(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class NewProposalCall__Outputs {
  _call: NewProposalCall;

  constructor(call: NewProposalCall) {
    this._call = call;
  }
}

export class RegisterMemberCall extends ethereum.Call {
  get inputs(): RegisterMemberCall__Inputs {
    return new RegisterMemberCall__Inputs(this);
  }

  get outputs(): RegisterMemberCall__Outputs {
    return new RegisterMemberCall__Outputs(this);
  }
}

export class RegisterMemberCall__Inputs {
  _call: RegisterMemberCall;

  constructor(call: RegisterMemberCall) {
    this._call = call;
  }

  get _newMember(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _memberURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RegisterMemberCall__Outputs {
  _call: RegisterMemberCall;

  constructor(call: RegisterMemberCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
